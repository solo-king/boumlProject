class RotationVectorSensor
!!!151426.cpp!!!	RotationVectorSensor(in mode : int = FUSION_9AXIS)
    const sensor_t sensor = {
        .name       = getSensorName(),
        .vendor     = "AOSP",
        .version    = 3,
        .handle     = getSensorToken(),
        .type       = getSensorType(),
        .maxRange   = 1,
        .resolution = 1.0f / (1<<24),
        .power      = mSensorFusion.getPowerUsage(),
        .minDelay   = mSensorFusion.getMinDelay(),
    };
    mSensor = Sensor(&sensor);
!!!151554.cpp!!!	process(inout outEvent : sensors_event_t, in event : sensors_event_t) : bool
    if (event.type == SENSOR_TYPE_ACCELEROMETER) {
        if (mSensorFusion.hasEstimate(mMode)) {
            const vec4_t q(mSensorFusion.getAttitude(mMode));
            *outEvent = event;
            outEvent->data[0] = q.x;
            outEvent->data[1] = q.y;
            outEvent->data[2] = q.z;
            outEvent->data[3] = q.w;
            outEvent->sensor = getSensorToken();
            outEvent->type = getSensorType();
            return true;
        }
    }
    return false;
!!!151682.cpp!!!	activate(inout ident : void, in enabled : bool) : status_t
    return mSensorFusion.activate(mMode, ident, enabled);
!!!151810.cpp!!!	setDelay(inout ident : void, in handle : int, in ns : int64_t) : status_t
    return mSensorFusion.setDelay(mMode, ident, ns);
!!!151938.cpp!!!	getSensorType() : int
    switch(mMode) {
        case FUSION_9AXIS:
            return SENSOR_TYPE_ROTATION_VECTOR;
        case FUSION_NOMAG:
            return SENSOR_TYPE_GAME_ROTATION_VECTOR;
        case FUSION_NOGYRO:
            return SENSOR_TYPE_GEOMAGNETIC_ROTATION_VECTOR;
        default:
            assert(0);
            return 0;
    }
!!!152066.cpp!!!	getSensorName() : char
    switch(mMode) {
        case FUSION_9AXIS:
            return "Rotation Vector Sensor";
        case FUSION_NOMAG:
            return "Game Rotation Vector Sensor";
        case FUSION_NOGYRO:
            return "GeoMag Rotation Vector Sensor";
        default:
            assert(0);
            return NULL;
    }
!!!152194.cpp!!!	getSensorToken() : int
    switch(mMode) {
        case FUSION_9AXIS:
            return '_rov';
        case FUSION_NOMAG:
            return '_gar';
        case FUSION_NOGYRO:
            return '_geo';
        default:
            assert(0);
            return 0;
    }
